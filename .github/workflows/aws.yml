name: CI/CD for Serverless Python Demo

# This workflow will automatically build, test, and deploy the application to AWS
# every time a new change is committed to the main or staging branch.
# It will also run a linter and a test on the application every time a merge request is made to the repository.

on:
  # Trigger the workflow whenever a new change is pushed to the main or staging branch
  push:
    branches:
      - main
    #  - staging

  # Trigger the workflow whenever a new merge request is made to the repository
  pull_request:
    branches:
      - main
     # - staging

jobs:
  # Build the application.
  build:
    runs-on: ubuntu-latest
    steps:
    
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
      - uses: aws-actions/setup-sam@v2
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_SECRET_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          
    # Createing a virtual environment and install the application dependencies. 
      - name: Create virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
          
      - run: sam build --use-container -t template.yaml
      - run: sam deploy --no-confirm-changeset --no-fail-on-empty-changeset

  # Deploy the application to AWS.
  deploy:
    runs-on: ubuntu-latest
    needs:
      - build
    #  - test
    steps:
    
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
      - uses: aws-actions/setup-sam@v2
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: AKIA6HNQ64FNHY5WL25S
          aws-secret-access-key: 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
          aws-region: us-east-2
      - run: sam build --use-container
      - run: sam deploy --no-confirm-changeset --no-fail-on-empty-changeset
      
      
      # check out the code from the repository.
      - uses: actions/checkout@v2

      - name: Install AWS CLI and SAM CLI
        run: |
          sudo apt-get install awscli
          pip install aws-sam-cli

      # Deploy the app using sam deploy --guided.
      - name: Deploy application
        run: |
          sam deploy --guided
